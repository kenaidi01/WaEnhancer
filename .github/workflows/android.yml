name: Android CI

on:
  push:
    branches: [ "master" ]
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'Merge')
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Keystore for Signing
        run: |
          if [ ! -z "$KEY_STORE_BASE64" ]; then
            echo androidStorePassword="$KEY_STORE_PASSWORD" >> gradle.properties
            echo androidKeyAlias="$KEY_ALIAS" >> gradle.properties
            echo androidKeyPassword="$KEY_PASSWORD" >> gradle.properties
            echo androidStoreFile=key.jks >> gradle.properties
            echo "$KEY_STORE_BASE64" | base64 --decode > key.jks
          fi
        shell: bash
        env:
          KEY_STORE_BASE64: ${{ secrets.KEY_STORE_BASE64 }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build all flavor variants
        run: |
          ./gradlew assembleWhatsappRelease assembleBusinessRelease -Pminify=true

      - name: Get short SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Upload WhatsApp flavor artifacts
        uses: actions/upload-artifact@v4
        with:
          name: whatsapp-release-app-${{ env.SHORT_SHA }}
          path: app/build/outputs/apk/whatsapp/release/app-whatsapp-release.apk

      - name: Upload Business flavor artifacts
        uses: actions/upload-artifact@v4
        with:
          name: business-release-app-${{ env.SHORT_SHA }}
          path: app/build/outputs/apk/business/release/app-business-release.apk

      - name: Post to Telegram channel
        if: ${{ success() && github.ref == 'refs/heads/master' && github.ref_type != 'tag' }}
        env:
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
        run: |
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)
            export output_whatsapp=app/WaEnhancer_$GITHUB_SHA_SHORT.apk
            export output_business=app/WaEnhancer_Business_$GITHUB_SHA_SHORT.apk
            cp app/build/outputs/apk/whatsapp/release/app-whatsapp-release.apk $output_whatsapp
            cp app/build/outputs/apk/business/release/app-business-release.apk $output_business
            export LOG=$(cat changelog.txt)
            ESCAPED=$(python3 -c 'import json,os,urllib.parse; msg = json.dumps(os.getenv("LOG")); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.getenv("COMMIT_URL"))))')
          
            # Send WhatsApp variant
            curl "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fwa%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fw4b%22%2C%22caption%22%3A${ESCAPED}%7D%5D" -F wa="@$output_whatsapp" -F w4b="@$output_business"
          fi

      - name: Upload to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: WaEnhancer ${{ env.SHORT_SHA }}
          body_path: changelog.txt
          files: |
            app/build/outputs/apk/whatsapp/release/app-whatsapp-release.apk
            app/build/outputs/apk/business/release/app-business-release.apk
          tag_name: release-${{ env.SHORT_SHA }}
